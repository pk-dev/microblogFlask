from app import db


class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    nickname=db.Column(db.String(64), index=True, unique=True)
    email=db.Column(db.String(120), index=True, unique=True)
    posts = db.relationship('Post', backref='author', lazy='dynamic')

    #implementing properties required by flask_login module - starts
    @property
    def is_authenticated(self):
        # should return True unless the object represents a user that should not be allowed to authenticate for some reason.
        return True

    @property
    def is_anonymous(self):
        # should return True only for fake users that are not supposed to log in to the system.
        return False

    @property
    def is_active(self):
        # should return True for users unless they are inactive, for example because they have been banned.
        return True

    def get_id(self):
        #to return a unique identifier for the user, in unicode format.
        #Here we use the unique id generated by the database layer for this.
        try:
            return unicode(self.id,) #python2
        except NameError:
            return str(self.id) #python3

    #implementing properties required by flask_login module - ends


    def __repr__(self):
        return '<User %r>' % (self.nickname)


class Post(db.Model):
    id = db.Column(db.Integer, primary_key = True)
    body = db.Column(db.String(140))
    timestamp = db.Column(db.DateTime)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

    def __repr__(self):
        return '<Post %r>' % (self.body)